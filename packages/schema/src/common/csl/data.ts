// SPDX-FileCopyrightText: LXCat team
//
// SPDX-License-Identifier: Apache-2.0

import {
  any,
  array,
  enum as zEnum,
  number,
  object,
  record,
  string,
  TypeOf,
  union,
} from "zod";
import { CSLDateVariable } from "./date-variable.js";
import { CSLNameVariable } from "./name-variable.js";

export const CSLData = object({
  type: zEnum([
    "article",
    "article-journal",
    "article-magazine",
    "article-newspaper",
    "bill",
    "book",
    "broadcast",
    "chapter",
    "classic",
    "collection",
    "dataset",
    "document",
    "entry",
    "entry-dictionary",
    "entry-encyclopedia",
    "event",
    "figure",
    "graphic",
    "hearing",
    "interview",
    "legal_case",
    "legislation",
    "manuscript",
    "map",
    "motion_picture",
    "musical_score",
    "pamphlet",
    "paper-conference",
    "patent",
    "performance",
    "periodical",
    "personal_communication",
    "post",
    "post-weblog",
    "regulation",
    "report",
    "review",
    "review-book",
    "software",
    "song",
    "speech",
    "standard",
    "thesis",
    "treaty",
    "webpage",
  ]),
  id: union([string(), number()]),
  "citation-key": string().optional(),
  categories: array(string()).optional(),
  language: string().optional(),
  journalAbbreviation: string().optional(),
  shortTitle: string().optional(),
  author: array(CSLNameVariable).optional(),
  chair: array(CSLNameVariable).optional(),
  "collection-editor": array(CSLNameVariable).optional(),
  compiler: array(CSLNameVariable).optional(),
  composer: array(CSLNameVariable).optional(),
  "container-author": array(CSLNameVariable).optional(),
  contributor: array(CSLNameVariable).optional(),
  curator: array(CSLNameVariable).optional(),
  director: array(CSLNameVariable).optional(),
  editor: array(CSLNameVariable).optional(),
  "editorial-director": array(CSLNameVariable).optional(),
  "executive-producer": array(CSLNameVariable).optional(),
  guest: array(CSLNameVariable).optional(),
  host: array(CSLNameVariable).optional(),
  interviewer: array(CSLNameVariable).optional(),
  illustrator: array(CSLNameVariable).optional(),
  narrator: array(CSLNameVariable).optional(),
  organizer: array(CSLNameVariable).optional(),
  "original-author": array(CSLNameVariable).optional(),
  performer: array(CSLNameVariable).optional(),
  producer: array(CSLNameVariable).optional(),
  recipient: array(CSLNameVariable).optional(),
  "reviewed-author": array(CSLNameVariable).optional(),
  "script-writer": array(CSLNameVariable).optional(),
  "series-creator": array(CSLNameVariable).optional(),
  translator: array(CSLNameVariable).optional(),
  accessed: CSLDateVariable.optional(),
  "available-date": CSLDateVariable.optional(),
  "event-date": CSLDateVariable.optional(),
  issued: CSLDateVariable.optional(),
  "original-date": CSLDateVariable.optional(),
  submitted: CSLDateVariable.optional(),
  abstract: string().optional(),
  annote: string().optional(),
  archive: string().optional(),
  archive_collection: string().optional(),
  archive_location: string().optional(),
  "archive-place": string().optional(),
  authority: string().optional(),
  "call-number": string().optional(),
  "chapter-number": union([string(), number()]).optional(),
  "citation-number": union([string(), number()]).optional(),
  "citation-label": string().optional(),
  "collection-number": union([string(), number()]).optional(),
  "collection-title": string().optional(),
  "container-title": string().optional(),
  "container-title-short": string().optional(),
  dimensions: string().optional(),
  division: string().optional(),
  DOI: string().optional(),
  edition: union([string(), number()]).optional(),
  event: string()
    .describe(
      "[Deprecated - use 'event-title' instead. Will be removed in 1.1]",
    )
    .optional(),
  "event-title": string().optional(),
  "event-place": string().optional(),
  "first-reference-note-number": union([string(), number()])
    .optional(),
  genre: string().optional(),
  ISBN: string().optional(),
  ISSN: string().optional(),
  issue: union([string(), number()]).optional(),
  jurisdiction: string().optional(),
  keyword: string().optional(),
  locator: union([string(), number()]).optional(),
  medium: string().optional(),
  note: string().optional(),
  number: union([string(), number()]).optional(),
  "number-of-pages": union([string(), number()]).optional(),
  "number-of-volumes": union([string(), number()]).optional(),
  "original-publisher": string().optional(),
  "original-publisher-place": string().optional(),
  "original-title": string().optional(),
  page: union([string(), number()]).optional(),
  "page-first": union([string(), number()]).optional(),
  part: union([string(), number()]).optional(),
  "part-title": string().optional(),
  PMCID: string().optional(),
  PMID: string().optional(),
  printing: union([string(), number()]).optional(),
  publisher: string().optional(),
  "publisher-place": string().optional(),
  references: string().optional(),
  "reviewed-genre": string().optional(),
  "reviewed-title": string().optional(),
  scale: string().optional(),
  section: string().optional(),
  source: string().optional(),
  status: string().optional(),
  supplement: union([string(), number()]).optional(),
  title: string().optional(),
  "title-short": string().optional(),
  URL: string().optional(),
  version: string().optional(),
  volume: union([string(), number()]).optional(),
  "volume-title": string().optional(),
  "volume-title-short": string().optional(),
  "year-suffix": string().optional(),
  custom: record(any())
    .describe(
      "Used to store additional information that does not have a designated CSL JSON field. The custom field is preferred over the note field for storing custom data, particularly for storing key-value pairs, as the note field is used for user annotations in annotated bibliography styles.",
    )
    .optional(),
})
  .describe("Zod schema for CSL input data");
export type CSLData = TypeOf<typeof CSLData>;
