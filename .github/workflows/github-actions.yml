name: CI/CD pipeline for LXCat
on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
        restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build packages
      run: pnpm build
    # - name: Cleanup
    #   run: rm -rf .next/cache
    - name: Lint
      run: pnpm lint

  test-database:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Test @lxcat/database
      run: pnpm -C packages/database test -- run --coverage --no-threads
    - name: Create coverage report
      if: always()
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        working-directory: packages/database

  test-schema:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Test @lxcat/schema
      run: pnpm -C packages/schema test -- run --coverage
    - name: Create coverage report
      if: always()
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        working-directory: packages/schema
