# SPDX-FileCopyrightText: LXCat team
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Test

on: 
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
        restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build packages
      run: pnpm build
    - name: Lint
      run: pnpm lint

  test-app:
    needs: build
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Install playwright browsers
      run: pnpm -C app exec playwright install chromium --with-deps
    - name: Run unit tests
      run: pnpm -C app test -- run --coverage
    - name: Create coverage report for unit tests
      if: always()
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        working-directory: app
    # TODO: Collect coverage for end-to-end tests.
    # See https://playwright.dev/docs/ci-intro for how to upload report as artifact.
    - name: Run end-to-end tests
      run: pnpm -C app test:e2e

  test-database:
    needs: build
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Test @lxcat/database
      run: pnpm -C packages/database test -- run --coverage --no-threads
    - name: Create coverage report
      if: always()
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        working-directory: packages/database

  test-schema:
    needs: build
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/cache/restore@v3
      with:
        path: |
          ${{ github.workspace }}/packages/schema/dist
          ${{ github.workspace }}/packages/database/dist
          ${{ github.workspace }}/packages/converter/dist
          ${{ github.workspace }}/packages/converter/target
          ${{ github.workspace }}/app/.next/
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Test @lxcat/schema
      run: pnpm -C packages/schema test -- run --coverage
    - name: Create coverage report
      if: always()
      uses: davelosert/vitest-coverage-report-action@v2
      with:
        working-directory: packages/schema

  reuse:
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v4
    - name: REUSE compliance check
      uses: fsfe/reuse-action@v2
